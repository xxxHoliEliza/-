import React, { useEffect, useMemo, useState } from "react";
import { motion } from "framer-motion";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from "@/components/ui/dialog";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Badge } from "@/components/ui/badge";
import { Separator } from "@/components/ui/separator";
import {
  Plus,
  Link as LinkIcon,
  Edit3,
  Trash2,
  Disc as DiscordIcon,
  Youtube,
  DollarSign,
  ShieldCheck,
  Gauge,
  TrendingUp,
  Users,
  Sparkles,
  ExternalLink,
  Image as ImageIcon,
  Save,
} from "lucide-react";

// --- CONFIG KEYS ---
const LS_LINKS_KEY = "elizabeth_club_links_v1";
const LS_LOGO_KEY = "elizabeth_club_logo_v1";

// --- DEFAULT CONTENT ---
const DEFAULT_LINKS = [
  { id: "discord", name: "Discord 社区", url: "https://discord.gg/your-server", type: "discord" },
  { id: "patreon", name: "Patreon 会员", url: "https://patreon.com/your-page", type: "patreon" },
  { id: "youtube", name: "YouTube 频道", url: "https://youtube.com/@your-channel", type: "youtube" },
];

const ICON_MAP: Record<string, JSX.Element> = {
  discord: <DiscordIcon className="h-5 w-5" />,
  patreon: <DollarSign className="h-5 w-5" />, // 以$代替Patreon图标
  youtube: <Youtube className="h-5 w-5" />,
  link: <LinkIcon className="h-5 w-5" />,
};

// --- SIMPLE SVG LOGO (可替换) ---
function ElizabethLogo({ src }: { src?: string | null }) {
  if (src) {
    return (
      // eslint-disable-next-line @next/next/no-img-element
      <img src={src} alt="Elizabeth Club Logo" className="h-12 w-12 rounded-2xl shadow-md" />
    );
  }
  return (
    <svg viewBox="0 0 64 64" className="h-12 w-12 rounded-2xl shadow-md">
      <defs>
        <linearGradient id="g" x1="0" y1="0" x2="1" y2="1">
          <stop offset="0%" stopColor="#111827" />
          <stop offset="100%" stopColor="#374151" />
        </linearGradient>
      </defs>
      <rect x="0" y="0" width="64" height="64" rx="14" fill="url(#g)" />
      <g transform="translate(12,12)">
        <path d="M8 8h24v4H12v8h18v4H12v8h20v4H8z" fill="#fff" />
        <path d="M30 8c6 0 10 4 10 10s-4 10-10 10" fill="none" stroke="#8b5cf6" strokeWidth="3" strokeLinecap="round" />
      </g>
    </svg>
  );
}

// --- UTIL ---
const readLinks = (): Array<{ id: string; name: string; url: string; type: string }> => {
  try {
    const raw = localStorage.getItem(LS_LINKS_KEY);
    return raw ? JSON.parse(raw) : DEFAULT_LINKS;
  } catch {
    return DEFAULT_LINKS;
  }
};

const saveLinks = (links: any) => localStorage.setItem(LS_LINKS_KEY, JSON.stringify(links));
const readLogo = () => localStorage.getItem(LS_LOGO_KEY);
const saveLogo = (dataUrl: string) => localStorage.setItem(LS_LOGO_KEY, dataUrl);

export default function ElizabethClubSite() {
  const [links, setLinks] = useState(DEFAULT_LINKS);
  const [logo, setLogo] = useState<string | null>(null);
  const [editing, setEditing] = useState(false);

  useEffect(() => {
    setLinks(readLinks());
    setLogo(readLogo());
  }, []);

  const onAdd = () => {
    setLinks((prev) => {
      const next = [...prev, { id: crypto.randomUUID(), name: "新链接", url: "https://", type: "link" }];
      saveLinks(next);
      return next;
    });
  };

  const onRemove = (id: string) => {
    setLinks((prev) => {
      const next = prev.filter((l) => l.id !== id);
      saveLinks(next);
      return next;
    });
  };

  const onChange = (id: string, field: "name" | "url" | "type", value: string) => {
    setLinks((prev) => {
      const next = prev.map((l) => (l.id === id ? { ...l, [field]: value } : l));
      saveLinks(next);
      return next;
    });
  };

  const primaryLink = useMemo(() => links.find((l) => l.type === "discord") || links[0], [links]);

  const handleLogoUpload = async (file: File | null) => {
    if (!file) return;
    const reader = new FileReader();
    reader.onload = () => {
      const dataUrl = String(reader.result);
      setLogo(dataUrl);
      saveLogo(dataUrl);
    };
    reader.readAsDataURL(file);
  };

  return (
    <div className="min-h-screen bg-gradient-to-b from-white to-slate-50 text-slate-900">
      {/* NAV */}
      <header className="sticky top-0 z-50 backdrop-blur bg-white/70 border-b">
        <div className="mx-auto max-w-6xl px-4 py-3 flex items-center justify-between">
          <div className="flex items-center gap-3">
            <ElizabethLogo src={logo} />
            <div>
              <div className="text-xl font-semibold tracking-wide">Elizabeth 美股俱乐部</div>
              <div className="text-xs text-slate-500">Elizabeth US Stocks Club</div>
            </div>
          </div>
          <div className="flex items-center gap-2">
            <Dialog open={editing} onOpenChange={setEditing}>
              <DialogTrigger asChild>
                <Button variant="outline" size="sm"><Edit3 className="mr-2 h-4 w-4"/>编辑/新增链接</Button>
              </DialogTrigger>
              <DialogContent className="max-w-2xl">
                <DialogHeader>
                  <DialogTitle>管理外链</DialogTitle>
                </DialogHeader>
                <Tabs defaultValue="links">
                  <TabsList className="grid grid-cols-2 w-full">
                    <TabsTrigger value="links">外链</TabsTrigger>
                    <TabsTrigger value="branding">品牌</TabsTrigger>
                  </TabsList>
                  <TabsContent value="links" className="space-y-4">
                    {links.map((l) => (
                      <Card key={l.id}>
                        <CardContent className="pt-6 grid grid-cols-12 gap-3 items-center">
                          <div className="col-span-12 md:col-span-3">
                            <label className="text-xs text-slate-500">类型</label>
                            <select
                              className="mt-1 w-full border rounded-md px-3 py-2"
                              value={l.type}
                              onChange={(e) => onChange(l.id, "type", e.target.value)}
                            >
                              <option value="discord">Discord</option>
                              <option value="patreon">Patreon</option>
                              <option value="youtube">YouTube</option>
                              <option value="link">通用链接</option>
                            </select>
                          </div>
                          <div className="col-span-12 md:col-span-4">
                            <label className="text-xs text-slate-500">名称</label>
                            <Input className="mt-1" value={l.name} onChange={(e) => onChange(l.id, "name", e.target.value)} />
                          </div>
                          <div className="col-span-12 md:col-span-4">
                            <label className="text-xs text-slate-500">URL</label>
                            <Input className="mt-1" value={l.url} onChange={(e) => onChange(l.id, "url", e.target.value)} />
                          </div>
                          <div className="col-span-12 md:col-span-1 flex justify-end">
                            <Button variant="ghost" onClick={() => onRemove(l.id)}><Trash2 className="h-4 w-4"/></Button>
                          </div>
                        </CardContent>
                      </Card>
                    ))}
                    <Button onClick={onAdd}><Plus className="mr-2 h-4 w-4"/>新增链接</Button>
                  </TabsContent>
                  <TabsContent value="branding" className="space-y-4">
                    <Card>
                      <CardHeader>
                        <CardTitle>替换 Logo（可选）</CardTitle>
                      </CardHeader>
                      <CardContent className="space-y-3">
                        <div className="flex items-center gap-4">
                          <ElizabethLogo src={logo} />
                          <label className="cursor-pointer inline-flex items-center gap-2 text-sm">
                            <Input type="file" accept="image/*" className="hidden" onChange={(e) => handleLogoUpload(e.target.files?.[0] || null)} />
                            <Button variant="outline"><ImageIcon className="h-4 w-4 mr-2"/>上传图片</Button>
                          </label>
                          {logo && (
                            <Button variant="ghost" onClick={() => { localStorage.removeItem(LS_LOGO_KEY); setLogo(null); }}>
                              移除
                            </Button>
                          )}
                        </div>
                        <p className="text-xs text-slate-500">建议上传 1:1 比例的 PNG/SVG，透明背景最佳。</p>
                      </CardContent>
                    </Card>
                  </TabsContent>
                </Tabs>
              </DialogContent>
            </Dialog>
            {primaryLink?.url && (
              <a href={primaryLink.url} target="_blank" rel="noreferrer">
                <Button className="hidden sm:inline-flex">立刻加入 <ExternalLink className="ml-2 h-4 w-4"/></Button>
              </a>
            )}
          </div>
        </div>
      </header>

      {/* HERO */}
      <section className="mx-auto max-w-6xl px-4 pt-14 pb-10">
        <div className="grid md:grid-cols-2 gap-8 items-center">
          <div>
            <motion.h1
              initial={{ opacity: 0, y: 10 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.5 }}
              className="text-3xl md:text-5xl font-bold leading-tight"
            >
              Elizabeth 美股俱乐部
            </motion.h1>
            <p className="mt-4 text-slate-600">
              专注美股教育与社区交流：盘前要点、日内节奏、支撑/阻力、风险管理与合规提醒。链接模块可自由增删，适配 Discord、Patreon、YouTube 等任意外链。
            </p>
            <div className="mt-6 flex flex-wrap gap-3">
              {links.slice(0, 3).map((l) => (
                <a key={l.id} href={l.url} target="_blank" rel="noreferrer">
                  <Button variant="secondary" className="inline-flex items-center gap-2">
                    {ICON_MAP[l.type] || ICON_MAP.link}
                    <span>{l.name}</span>
                  </Button>
                </a>
              ))}
            </div>
            <div className="mt-4 text-xs text-slate-500">可通过右上角「编辑/新增链接」自由配置。</div>
          </div>
          <div className="relative">
            <Card className="shadow-xl">
              <CardHeader>
                <CardTitle>俱乐部亮点</CardTitle>
              </CardHeader>
              <CardContent className="grid grid-cols-2 gap-4">
                <Feature icon={<TrendingUp className="h-5 w-5"/>} title="盘前/日内要点" desc="SPY/QQQ 关键位、信号强度、情绪变化。" />
                <Feature icon={<Gauge className="h-5 w-5"/>} title="节奏与风险" desc="0DTE纪律、仓位与止损，控制回撤。" />
                <Feature icon={<Users className="h-5 w-5"/>} title="多平台联动" desc="Discord + Patreon + YouTube 一体化。" />
                <Feature icon={<ShieldCheck className="h-5 w-5"/>} title="合规与提醒" desc="学习交流为主，不提供个股/交易建议。" />
              </CardContent>
            </Card>
          </div>
        </div>
      </section>

      {/* LINKS WALL */}
      <section id="links" className="mx-auto max-w-6xl px-4 pb-12">
        <h2 className="text-xl font-semibold mb-4">快速入口</h2>
        <div className="grid sm:grid-cols-2 lg:grid-cols-3 gap-4">
          {links.map((l) => (
            <a key={l.id} href={l.url} target="_blank" rel="noreferrer" className="group">
              <Card className="transition hover:shadow-lg">
                <CardContent className="pt-6 pb-5 flex items-center gap-3">
                  <Badge variant="secondary" className="rounded-xl">{ICON_MAP[l.type] || ICON_MAP.link}</Badge>
                  <div className="font-medium">{l.name}</div>
                  <ExternalLink className="ml-auto h-4 w-4 opacity-50 group-hover:opacity-100"/>
                </CardContent>
              </Card>
            </a>
          ))}
        </div>
      </section>

      <Separator />

      {/* ABOUT & RULES */}
      <section id="about" className="mx-auto max-w-6xl px-4 py-12 grid md:grid-cols-2 gap-8">
        <Card>
          <CardHeader>
            <CardTitle>关于俱乐部</CardTitle>
          </CardHeader>
          <CardContent className="space-y-3 text-sm text-slate-700">
            <p>
              我们专注美股市场的教育内容与交流，涵盖指数节奏、技术关口、宏观日程，以及社区成员的经验分享。欢迎新手与进阶交易者共同学习。
            </p>
            <p>
              平台为学习型社区，不提供个股或衍生品的买卖建议。请根据自身风险承受能力，独立做出决策。
            </p>
          </CardContent>
        </Card>
        <Card>
          <CardHeader>
            <CardTitle>社区规范（摘要）</CardTitle>
          </CardHeader>
          <CardContent className="space-y-2 text-sm text-slate-700">
            <ul className="list-disc pl-5 space-y-1">
              <li>尊重事实与数据，避免人身攻击与广告骚扰。</li>
              <li>分享学习心得与工具，不贴盘中喊单/带单。</li>
              <li>遵守各平台服务条款与当地法律法规。</li>
            </ul>
          </CardContent>
        </Card>
      </section>

      <Separator />

      {/* DISCLAIMER */}
      <section id="disclaimer" className="mx-auto max-w-6xl px-4 py-12">
        <Card>
          <CardHeader>
            <CardTitle>免责声明</CardTitle>
          </CardHeader>
          <CardContent className="text-sm text-slate-600 space-y-2">
            <p>
              本网站与社区所提供的所有信息仅用于学习与交流，不构成任何投资建议或买卖推荐。证券与期权交易具有高风险，可能导致资金部分或全部损失。请谨慎评估并自行承担责任。
            </p>
            <p className="text-xs">© {new Date().getFullYear()} Elizabeth US Stocks Club. All rights reserved.</p>
          </CardContent>
        </Card>
      </section>

      {/* FOOTER */}
      <footer className="border-t">
        <div className="mx-auto max-w-6xl px-4 py-8 grid md:grid-cols-2 gap-6">
          <div className="flex items-center gap-3">
            <ElizabethLogo src={logo} />
            <div>
              <div className="font-semibold">Elizabeth 美股俱乐部</div>
              <div className="text-xs text-slate-500">学习交流社群</div>
            </div>
          </div>
          <div>
            <div className="text-sm mb-2 font-medium">快速入口</div>
            <div className="flex flex-wrap gap-3">
              {links.map((l) => (
                <a key={l.id} className="text-slate-600 hover:underline inline-flex items-center gap-1" href={l.url} target="_blank" rel="noreferrer">
                  {(ICON_MAP[l.type] || ICON_MAP.link)}
                  {l.name}
                </a>
              ))}
            </div>
          </div>
        </div>
      </footer>
    </div>
  );
}

function Feature({ icon, title, desc }: { icon: JSX.Element; title: string; desc: string }) {
  return (
    <div className="flex items-start gap-3">
      <Badge variant="secondary" className="rounded-xl mt-1">{icon}</Badge>
      <div>
        <div className="font-medium">{title}</div>
        <div className="text-sm text-slate-600">{desc}</div>
      </div>
    </div>
  );
}
